<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE library SYSTEM "library.dtd">
<!-- autogenerated by fdtrans v51.16 -->
<library name="expat" basename="ExpatBase" basetype="Library" openname="expat.library">
	<include>libraries/expat.h</include>
	<interface name="main" version="1.0" struct="ExpatIFace" prefix="_Expat_" asmprefix="IExpat" global="IExpat">
		<method name="Obtain" result="uint32"/>
		<method name="Release" result="uint32"/>
		<method name="Expunge" result="void" status="unimplemented"/>
		<method name="Clone" result="struct Interface *" status="unimplemented"/>
		<method name="XML_ParserCreate" result="XML_Parser">
			<arg name="encodingName" type="const XML_Char *"/>
		</method>
		<method name="XML_ParserCreateNS" result="XML_Parser">
			<arg name="encodingName" type="const XML_Char *"/>
			<arg name="nsSep" type="XML_Char"/>
		</method>
		<method name="XML_ParserCreate_MM" result="XML_Parser">
			<arg name="encoding" type="const XML_Char *"/>
			<arg name="memsuite" type="const XML_Memory_Handling_Suite *"/>
			<arg name="namespaceSeparator" type="const XML_Char *"/>
		</method>
		<method name="XML_ExternalEntityParserCreate" result="XML_Parser">
			<arg name="parser" type="XML_Parser"/>
			<arg name="context" type="const XML_Char *"/>
			<arg name="encoding" type="const XML_Char *"/>
		</method>
		<method name="XML_ParserFree" result="void">
			<arg name="parser" type="XML_Parser"/>
		</method>
		<method name="XML_Parse" result="enum XML_Status">
			<arg name="parser" type="XML_Parser"/>
			<arg name="s" type="const char *"/>
			<arg name="len" type="int"/>
			<arg name="isFinal" type="int"/>
		</method>
		<method name="XML_ParseBuffer" result="enum XML_Status">
			<arg name="parser" type="XML_Parser"/>
			<arg name="len" type="int"/>
			<arg name="isFinal" type="int"/>
		</method>
		<method name="XML_GetBuffer" result="void *">
			<arg name="parser" type="XML_Parser"/>
			<arg name="len" type="int"/>
		</method>
		<method name="XML_SetStartElementHandler" result="void">
			<arg name="parser" type="XML_Parser"/>
			<arg name="start" type="XML_StartElementHandler"/>
		</method>
		<method name="XML_SetEndElementHandler" result="void">
			<arg name="parser" type="XML_Parser"/>
			<arg name="end" type="XML_EndElementHandler"/>
		</method>
		<method name="XML_SetElementHandler" result="void">
			<arg name="parser" type="XML_Parser"/>
			<arg name="start" type="XML_StartElementHandler"/>
			<arg name="end" type="XML_EndElementHandler"/>
		</method>
		<method name="XML_SetCharacterDataHandler" result="void">
			<arg name="parser" type="XML_Parser"/>
			<arg name="handler" type="XML_CharacterDataHandler"/>
		</method>
		<method name="XML_SetProcessingInstructionHandler" result="void">
			<arg name="parser" type="XML_Parser"/>
			<arg name="handler" type="XML_ProcessingInstructionHandler"/>
		</method>
		<method name="XML_SetCommentHandler" result="void">
			<arg name="parser" type="XML_Parser"/>
			<arg name="handler" type="XML_CommentHandler"/>
		</method>
		<method name="XML_SetStartCdataSectionHandler" result="void">
			<arg name="parser" type="XML_Parser"/>
			<arg name="start" type="XML_StartCdataSectionHandler"/>
		</method>
		<method name="XML_SetEndCdataSectionHandler" result="void">
			<arg name="parser" type="XML_Parser"/>
			<arg name="end" type="XML_EndCdataSectionHandler"/>
		</method>
		<method name="XML_SetCdataSectionHandler" result="void">
			<arg name="parser" type="XML_Parser"/>
			<arg name="start" type="XML_StartCdataSectionHandler"/>
			<arg name="end" type="XML_EndCdataSectionHandler"/>
		</method>
		<method name="XML_SetDefaultHandler" result="void">
			<arg name="parser" type="XML_Parser"/>
			<arg name="handler" type="XML_DefaultHandler"/>
		</method>
		<method name="XML_SetDefaultHandlerExpand" result="void">
			<arg name="parser" type="XML_Parser"/>
			<arg name="handler" type="XML_DefaultHandler"/>
		</method>
		<method name="XML_SetExternalEntityRefHandler" result="void">
			<arg name="parser" type="XML_Parser"/>
			<arg name="handler" type="XML_ExternalEntityRefHandler"/>
		</method>
		<method name="XML_SetExternalEntityRefHandlerArg" result="void">
			<arg name="parser" type="XML_Parser"/>
			<arg name="arg" type="void *"/>
		</method>
		<method name="XML_SetUnknownEncodingHandler" result="void">
			<arg name="parser" type="XML_Parser"/>
			<arg name="handler" type="XML_UnknownEncodingHandler"/>
			<arg name="data" type="void *"/>
		</method>
		<method name="XML_SetStartNamespaceDeclHandler" result="void">
			<arg name="parser" type="XML_Parser"/>
			<arg name="start" type="XML_StartNamespaceDeclHandler"/>
		</method>
		<method name="XML_SetEndNamespaceDeclHandler" result="void">
			<arg name="parser" type="XML_Parser"/>
			<arg name="end" type="XML_EndNamespaceDeclHandler"/>
		</method>
		<method name="XML_SetNamespaceDeclHandler" result="void">
			<arg name="parser" type="XML_Parser"/>
			<arg name="start" type="XML_StartNamespaceDeclHandler"/>
			<arg name="end" type="XML_EndNamespaceDeclHandler"/>
		</method>
		<method name="XML_SetXmlDeclHandler" result="void">
			<arg name="parser" type="XML_Parser"/>
			<arg name="handler" type="XML_XmlDeclHandler"/>
		</method>
		<method name="XML_SetStartDoctypeDeclHandler" result="void">
			<arg name="parser" type="XML_Parser"/>
			<arg name="start" type="XML_StartDoctypeDeclHandler"/>
		</method>
		<method name="XML_SetEndDoctypeDeclHandler" result="void">
			<arg name="parser" type="XML_Parser"/>
			<arg name="end" type="XML_EndDoctypeDeclHandler"/>
		</method>
		<method name="XML_SetDoctypeDeclHandler" result="void">
			<arg name="parser" type="XML_Parser"/>
			<arg name="start" type="XML_StartDoctypeDeclHandler"/>
			<arg name="end" type="XML_EndDoctypeDeclHandler"/>
		</method>
		<method name="XML_SetElementDeclHandler" result="void">
			<arg name="parser" type="XML_Parser"/>
			<arg name="eldecl" type="XML_ElementDeclHandler"/>
		</method>
		<method name="XML_SetAttlistDeclHandler" result="void">
			<arg name="parser" type="XML_Parser"/>
			<arg name="attdecl" type="XML_AttlistDeclHandler"/>
		</method>
		<method name="XML_SetEntityDeclHandler" result="void">
			<arg name="parser" type="XML_Parser"/>
			<arg name="handler" type="XML_EntityDeclHandler"/>
		</method>
		<method name="XML_SetUnparsedEntityDeclHandler" result="void">
			<arg name="parser" type="XML_Parser"/>
			<arg name="handler" type="XML_UnparsedEntityDeclHandler"/>
		</method>
		<method name="XML_SetNotationDeclHandler" result="void">
			<arg name="parser" type="XML_Parser"/>
			<arg name="handler" type="XML_NotationDeclHandler"/>
		</method>
		<method name="XML_SetNotStandaloneHandler" result="void">
			<arg name="parser" type="XML_Parser"/>
			<arg name="handler" type="XML_NotStandaloneHandler"/>
		</method>
		<method name="XML_GetErrorCode" result="enum XML_Error">
			<arg name="parser" type="XML_Parser"/>
		</method>
		<method name="XML_ErrorString" result="const XML_LChar *">
			<arg name="code" type="enum XML_Error"/>
		</method>
		<method name="XML_GetCurrentByteIndex" result="long">
			<arg name="parser" type="XML_Parser"/>
		</method>
		<method name="XML_GetCurrentLineNumber" result="int">
			<arg name="parser" type="XML_Parser"/>
		</method>
		<method name="XML_GetCurrentColumnNumber" result="int">
			<arg name="parser" type="XML_Parser"/>
		</method>
		<method name="XML_GetCurrentByteCount" result="int">
			<arg name="parser" type="XML_Parser"/>
		</method>
		<method name="XML_GetInputContext" result="const char *">
			<arg name="parser" type="XML_Parser"/>
			<arg name="offset" type="int *"/>
			<arg name="size" type="int *"/>
		</method>
		<method name="XML_SetUserData" result="void">
			<arg name="parser" type="XML_Parser"/>
			<arg name="userData" type="void *"/>
		</method>
		<method name="XML_DefaultCurrent" result="void">
			<arg name="parser" type="XML_Parser"/>
		</method>
		<method name="XML_UseParserAsHandlerArg" result="void">
			<arg name="parser" type="XML_Parser"/>
		</method>
		<method name="XML_SetBase" result="enum XML_Status">
			<arg name="parser" type="XML_Parser"/>
			<arg name="base" type="const XML_Char *"/>
		</method>
		<method name="XML_GetBase" result="const XML_Char *">
			<arg name="parser" type="XML_Parser"/>
		</method>
		<method name="XML_GetSpecifiedAttributeCount" result="int">
			<arg name="parser" type="XML_Parser"/>
		</method>
		<method name="XML_GetIdAttributeIndex" result="int">
			<arg name="parser" type="XML_Parser"/>
		</method>
		<method name="XML_SetEncoding" result="enum XML_Status">
			<arg name="parser" type="XML_Parser"/>
			<arg name="encoding" type="const XML_Char *"/>
		</method>
		<method name="XML_SetParamEntityParsing" result="int">
			<arg name="parser" type="XML_Parser"/>
			<arg name="parsing" type="enum XML_ParamEntityParsing"/>
		</method>
		<method name="XML_SetReturnNSTriplet" result="void">
			<arg name="parser" type="XML_Parser"/>
			<arg name="do_nst" type="int"/>
		</method>
		<method name="XML_ExpatVersion" result="const XML_LChar *">
		</method>
		<method name="XML_ExpatVersionInfo" result="XML_Expat_Version">
		</method>
		<method name="XML_ParserReset" result="XML_Bool">
			<arg name="parser" type="XML_Parser"/>
			<arg name="encoding" type="const XML_Char *"/>
		</method>
		<method name="XML_SetSkippedEntityHandler" result="void">
			<arg name="parser" type="XML_Parser"/>
			<arg name="handler" type="XML_SkippedEntityHandler"/>
		</method>
		<method name="XML_UseForeignDTD" result="enum XML_Error">
			<arg name="parser" type="XML_Parser"/>
			<arg name="useDTD" type="XML_Bool"/>
		</method>
		<method name="XML_GetFeatureList" result="const XML_Feature *">
		</method>
		<method name="XML_StopParser" result="enum XML_Status">
			<arg name="parser" type="XML_Parser"/>
			<arg name="resumable" type="XML_Bool"/>
		</method>
		<method name="XML_ResumeParser" result="enum XML_Status">
			<arg name="parser" type="XML_Parser"/>
		</method>
		<method name="XML_GetParsingStatus" result="void">
			<arg name="parser" type="XML_Parser"/>
			<arg name="status" type="XML_ParsingStatus *"/>
		</method>
		<method name="XML_FreeContentModel" result="void">
			<arg name="parser" type="XML_Parser"/>
			<arg name="model" type="XML_Content *"/>
		</method>
		<method name="XML_MemMalloc" result="void *">
			<arg name="parser" type="XML_Parser"/>
			<arg name="size" type="size_t"/>
		</method>
		<method name="XML_MemRealloc" result="void *">
			<arg name="parser" type="XML_Parser"/>
			<arg name="ptr" type="void *"/>
			<arg name="size" type="size_t"/>
		</method>
		<method name="XML_MemFree" result="void">
			<arg name="parser" type="XML_Parser"/>
			<arg name="ptr" type="void *"/>
		</method>
	</interface>
</library>
